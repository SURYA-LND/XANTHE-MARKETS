import React, { useState, useRef, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Menu, X, ChevronDown, Github, Twitter, Linkedin, BookOpen, MessageSquare, Code } from 'lucide-react';

const Header: React.FC = () => {
  const [isMobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [isResourcesOpen, setResourcesOpen] = useState(false);
  const resourcesRef = useRef<HTMLDivElement>(null);

  const mainNavItems = [
    { name: 'Community', href: '#' },
    { name: 'Enterprise', href: '#' },
    { name: 'Careers', href: '#' },
    { name: 'Pricing', href: '#' },
  ];

  const resourcesNavItems = [
    { name: 'Support', href: '#', icon: MessageSquare },
    { name: 'Blog', href: '#', icon: BookOpen },
    { name: 'API Docs', href: '#', icon: Code },
  ];

  const socialIcons = [
    { name: 'GitHub', href: '#', icon: Github },
    { name: 'Twitter', href: '#', icon: Twitter },
    { name: 'LinkedIn', href: '#', icon: Linkedin },
  ];

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (resourcesRef.current && !resourcesRef.current.contains(event.target as Node)) {
        setResourcesOpen(false);
      }
    };
    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  return (
    <header className="fixed top-0 left-0 right-0 z-50 bg-brand-dark/80 backdrop-blur-sm border-b border-white/10">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          <motion.div
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="flex-shrink-0"
          >
            <a href="#" className="text-2xl font-bold tracking-tighter text-white">
              MarketPulse<span className="text-brand-blue">.AI</span>
            </a>
          </motion.div>
          
          <nav className="hidden md:flex md:items-center md:space-x-8">
            {mainNavItems.map((item, index) => (
              <motion.a
                key={item.name}
                href={item.href}
                className="text-sm font-medium text-brand-gray-light hover:text-white transition-colors duration-300"
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.1 * index }}
              >
                {item.name}
              </motion.a>
            ))}
            <div className="relative" ref={resourcesRef}>
              <motion.button
                onClick={() => setResourcesOpen(!isResourcesOpen)}
                className="flex items-center text-sm font-medium text-brand-gray-light hover:text-white transition-colors duration-300"
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.4 }}
              >
                Resources
                <ChevronDown size={16} className={`ml-1 transition-transform ${isResourcesOpen ? 'rotate-180' : ''}`} />
              </motion.button>
              <AnimatePresence>
                {isResourcesOpen && (
                  <motion.div
                    initial={{ opacity: 0, y: 10, scale: 0.95 }}
                    animate={{ opacity: 1, y: 0, scale: 1 }}
                    exit={{ opacity: 0, y: 10, scale: 0.95 }}
                    transition={{ duration: 0.2, ease: "easeOut" }}
                    className="absolute top-full mt-2 w-48 origin-top-right bg-brand-gray rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
                  >
                    <div className="py-1">
                      {resourcesNavItems.map(item => (
                        <a key={item.name} href={item.href} className="flex items-center px-4 py-2 text-sm text-brand-gray-light hover:bg-brand-gray-dark hover:text-white">
                          <item.icon className="mr-3 h-5 w-5" />
                          {item.name}
                        </a>
                      ))}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>
            </div>
          </nav>

          <div className="hidden md:flex items-center space-x-4">
            {socialIcons.map((item, index) => (
              <motion.a
                key={item.name}
                href={item.href}
                target="_blank"
                rel="noopener noreferrer"
                className="text-brand-gray-light hover:text-white transition-colors"
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.5 + 0.1 * index }}
              >
                <item.icon size={20} />
              </motion.a>
            ))}
          </div>

          <div className="md:hidden flex items-center">
            <button onClick={() => setMobileMenuOpen(!isMobileMenuOpen)} className="text-white">
              {isMobileMenuOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </div>
      </div>

      <AnimatePresence>
      {isMobileMenuOpen && (
        <motion.div 
          className="md:hidden bg-brand-gray"
          initial={{ opacity: 0, height: 0 }}
          animate={{ opacity: 1, height: 'auto' }}
          exit={{ opacity: 0, height: 0 }}
        >
          <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
            {[...mainNavItems, ...resourcesNavItems].map((item) => (
              <a key={item.name} href={item.href} className="block px-3 py-2 rounded-md text-base font-medium text-brand-gray-light hover:text-white hover:bg-brand-gray-dark">
                {item.name}
              </a>
            ))}
            <div className="flex items-center justify-center space-x-6 pt-4 border-t border-brand-gray-dark mt-2">
              {socialIcons.map(item => (
                <a key={item.name} href={item.href} className="text-brand-gray-light hover:text-white">
                  <item.icon size={24} />
                </a>
              ))}
            </div>
          </div>
        </motion.div>
      )}
      </AnimatePresence>
    </header>
  );
};

export default Header;
